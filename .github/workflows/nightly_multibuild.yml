name: nightly multibuild

on: [push]
  # push: null
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        platform: [x64]
        PLAT: [x86_64]
        INTERFACE64: ['']
        MB_ML_VER: ['']
    env:
      REPO_DIR: OpenBLAS
      MACOSX_DEPLOYMENT_TARGET: 10.9
      MB_PYTHON_VERSION: ${{ matrix.python-version }}
      TRAVIS_PYTHON_VERSION: ${{ matrix.python-version }}
      MB_ML_LIBC: ${{ matrix.MB_ML_LIBC }}
      MB_ML_VER: ${{ matrix.MB_ML_VER }}
      INTERFACE64: ${{ matrix.INTERFACE64 }}
      BUILD_DIR: ${{ github.workspace }}
      SCIPY_WHEELS_NIGHTLY_ACCESS: ${{ secrets.SCIPY_WHEELS_NIGHTLY_ACCESS }}
      MULTIBUILD_WHEELS_STAGING_ACCESS: ${{ secrets.MULTIBUILD_WHEELS_STAGING_BUILD }}
      PLAT: ${{ matrix.PLAT }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set extra env
      run: |
        git ls-remote https://github.com/xianyi/OpenBLAS HEAD | sed -e "s/\s*HEAD$//" | xargs -I {} echo "OPENBLAS_COMMIT={}" >> $GITHUB_ENV;
        if [ "macos-11" == "${{ matrix.os }}" ]; then
          echo "TRAVIS_OS_NAME=osx" >> $GITHUB_ENV;
          echo "LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib" >> $GITHUB_ENV;
          echo "LIBRARY_PATH=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib" >> $GITHUB_ENV;
        else
          echo "TRAVIS_OS_NAME=${{ matrix.os }}" >> $GITHUB_ENV;
        fi
        echo "DOCKER_TEST_IMAGE=$(echo multibuild/xenial_${{ matrix.PLAT}})" >> $GITHUB_ENV;
    - name: Print some Environment variable
      run: |
        echo "OPENBLAS_COMMIT: ${OPENBLAS_COMMIT}"
        echo "TRAVIS_OS_NAME: ${TRAVIS_OS_NAME}"
        echo "PLAT: ${PLAT}"
        echo "DOCKER_TEST_IMAGE: ${DOCKER_TEST_IMAGE}"
    - name: Install VirtualEnv
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
    - name: Build and Install Wheels
      run: |
        set -xeo pipefail
        if [[ "$PLAT" == "arm64" ]]; then
          sudo xcode-select -switch /Applications/Xcode_12.5.1.app
          export SDKROOT=/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
        fi
        source travis-ci/build_steps.sh
        echo "------ BEFORE BUILD ---------"
        before_build
        echo "------ CLEAN CODE --------"
        clean_code $REPO_DIR $OPENBLAS_COMMIT
        echo "------ BUILD LIB --------"
        build_lib "$PLAT" "$INTERFACE64" "1"
